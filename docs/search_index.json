[
["index.html", "R’da Veri Görselleştirme Bölüm 1 Önsöz", " R’da Veri Görselleştirme Ahmet Akgül, Can Özkan 2020-05-23 Bölüm 1 Önsöz Hakkında bir şey bilmediğiniz konularda onu öğrenmek adına başvuracağınız bazı yöntemler vardır. Örneğin, insanları tanımak için zamana; veriyi tanımak, sonuçlarını yorumlamak için ise görsellere… Veri ile uğraşan her bilim dalının -sanırım artık kalmadı- ortak çatıda buluşabileceği bir alan veri görselleştirmesi. Çok temel, basit bir konu olmasına rağmen çalışmalarda grafikler üzerinde ciddi eksiklerin olması bu kitabı oluşturmamıza sebep oldu. R’ın ggplot kütüphanesi ise veri görselleştirme konusunda herkesin rahatlıkla anlayabileceği, az önce belirttiğim ortak çatıda buluşabileceği basit bir yapı. E[x] = “R ile anlaşılır grafikler oluşturmak” Can Özkan "],
["giri-.html", "Bölüm 2 Giriş 2.1 Kullanılan Kütüphaneler 2.2 Kullanılan Veri Setleri", " Bölüm 2 Giriş Bu çalışmayı hazırlarken şu iki soruyu aklımızdan çıkarmadık: Görseli daha ne kadar güzelleştirebiliriz? Görseldeki bilgiyi karmaşık olmadan okuyucuya nasıl aktarabiliriz? Uygulama yaparken şu üç şeyi görmenizi istedik: Bir görselin en basit halinden daha göze hitap edecek bir hale getirilme aşamaları Bir görselin başlangıcından bitişine kadar olan süreçte kullanılan bilgilerdeki değişim R’da yapılan görselleştirmelerin çoğunlukla tekrar eden yapısı Sizlerden ricamız: Bizler sadece bu alana odaklanan uzmanlar değiliz. Fakat veri görselleştirme profesyonel hayatımızın önemli bir parçası ve bütün ciddiyeti ile bu parçayı kullanıyoruz. Bunu unutmayın. Görselleri bütün detayları ile anlatarak okuyucunun araştırma duygularını öldürmek istemedik. Eksik kaldığınız yerlerde mutlaka araştırın. Bu sayede internette soru sorma, dokümantasyon okuma gibi beceriler kazanabilir ya da bunları geliştirebilirsiniz. Bu çalışmayı, Can Özkan’ın da onayı ile 12 Mayıs’ta 200. yaşına giren Hemşire ve aynı zamanda tutkulu bir İstatistikçi Florence Nightingale’ın anısına armağan ediyoruz. Ne zaman çileden çıksam, yeni bir grafikle intikamımı alıyorum. 2.1 Kullanılan Kütüphaneler library(circlize) library(directlabels) library(dplyr) library(fmsb) library(ggalluvial) library(ggalt) library(ggplot2) library(ggridges) library(ggthemes) library(igraph) library(leaflet) library(lubridate) library(magrittr) library(raster) library(readxl) library(tibble) library(scales) library(tidyquant) library(treemap) library(vistime) 2.2 Kullanılan Veri Setleri v1 &lt;- read_excel(&quot;v1.xlsx&quot;) v2 &lt;- read_excel(&quot;v2.xlsx&quot;) v3 &lt;- read.csv(&quot;v3.csv&quot;) v4 &lt;- read_excel(&quot;v4.xlsx&quot;) v5 &lt;- read_excel(&quot;v5.xlsx&quot;) v6 &lt;- read.csv(&quot;v6.csv&quot;) v7 &lt;- read_excel(&quot;v7.xls&quot;) v8 &lt;- read_excel(&quot;v8.xlsx&quot;) v9 &lt;- read.csv(&quot;v9.csv&quot;) v10 &lt;- read_excel(&quot;v10.xlsx&quot;) v11 &lt;- read_excel(&quot;v11.xlsx&quot;) v12 &lt;- read_excel(&quot;v12.xlsx&quot;) v13 &lt;- read_excel(&quot;v13.xlsx&quot;) v14 &lt;- read.csv(&quot;v14.csv&quot;) v15 &lt;- read_excel(&quot;v15.xls&quot;) v16 &lt;- read_excel(&quot;v16.xls&quot;) v17 &lt;- read.csv(&quot;v17.csv&quot;) v18 &lt;- read.csv(&quot;v18.csv&quot;) v19 &lt;- read.csv(&quot;v19.csv&quot;) v20 &lt;- read_excel(&quot;v20.xlsx&quot;) v21 &lt;- read_excel(&quot;v21.xlsx&quot;) v22 &lt;- read_excel(&quot;v22.xlsx&quot;) v23 &lt;- read_excel(&quot;v23.xlsx&quot;) v24 &lt;- read_excel(&quot;v24.xlsx&quot;) v25 &lt;- read_excel(&quot;v25.xlsx&quot;) v26 &lt;- read.csv(&quot;v26.csv&quot;) v27 &lt;- read.csv(&quot;v27.csv&quot;) v28 &lt;- read_excel(&quot;v28.xls&quot;) Kitap boyunca kullanılan veri setleri Github’da verilmiştir. Öncelikli olarak bu dosyayı indirmenizi tavsiye ederim. Buraya tıklayın. Clone or download bölümünden Download ZIP seçeneği ile dosyaları indirebilirsiniz. Hedef dosya: data "],
["veri-görselle-tirme-tür-ve-uygulamalar-.html", "Bölüm 3 Veri Görselleştirme Tür ve Uygulamaları 3.1 Alluvial 3.2 Bar (Çubuk) 3.3 Box and Whisker (Kutu-Bıyık) 3.4 Bubble (Balon) 3.5 Bubble Map (Balon Harita) 3.6 Candlestick (Mum) 3.7 Chord (Akor) 3.8 Choropleth Map 3.9 Circular 3.10 Connected Scatter (Bağlantılı Saçılım) 3.11 Connection Map (Bağlantı Harita) 3.12 Density (Yoğunluk) 3.13 Donut 3.14 Dot Map (Nokta Haritası) 3.15 Dumbbell 3.16 Heatmap (Isı Haritası) 3.17 Histogram 3.18 Line (Çizgi) 3.19 Lollipop 3.20 Multi-set Bar (Çoklu Çubuk) 3.21 Network (Ağ) 3.22 OHLC (Açılış-Yükseliş-Düşüş-Kapanış) 3.23 Population Pyramid (Nüfus Piramidi) 3.24 Radar 3.25 Ridgeline 3.26 Scatter (Dağılım, Nokta, Saçılım) 3.27 Stacked Area (Yığılı Alan) 3.28 Stacked Bar (Yığılmış Çubuk) 3.29 Timeline (Zaman Çizelgesi) 3.30 Treemap (Ağaç Harita) 3.31 Violin (Viyolonsel) 3.32 Wordcloud (Kelime Bulutu)", " Bölüm 3 Veri Görselleştirme Tür ve Uygulamaları 3.1 Alluvial Sosyal medya kullanımına göre İBB aday tercihi: #En basit şekilde ggplot(data = v1, mapping = aes(y = Oran, axis1 = `Sosyal Medya`, axis2 = Aday)) + geom_alluvium(aes(fill = Aday)) + geom_stratum() + geom_text(stat = &quot;stratum&quot;, infer.label = TRUE) Kutuları küçültebiliriz. Kutular ile yazıların renklerini değiştirebiliriz. Geçiş renklerini değiştirebiliriz, şeffaflığını ayarlayabiliriz. Boşlukları kapatabiliriz. x eksenindeki isimleri değiştirebiliriz. y eksenindeki değerleri kaldırabiliriz. ggplot(data = v1, mapping = aes(y = Oran, axis1 = `Sosyal Medya`, axis2 = Aday)) + geom_alluvium(aes(fill = Aday), alpha = 0.7) + geom_stratum(width = 0.2, fill = &quot;gray15&quot;) + geom_text(stat = &quot;stratum&quot;, infer.label = TRUE, color = &quot;white&quot;) + scale_fill_manual(values = c(&quot;gray&quot;, &quot;darkred&quot;, &quot;orange&quot;)) + scale_x_discrete(limits = c(&quot;Sosyal Medya&quot;,&quot;Aday&quot;), expand = c(0,0)) + theme(axis.text.y = element_blank()) Lejantı düzenleyebiliriz. y eksenine ait başlığı kaldırabiliriz. Başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v1, mapping = aes(y = Oran, axis1 = `Sosyal Medya`, axis2 = Aday)) + geom_alluvium(aes(fill = Aday), alpha = 0.7) + geom_stratum(width = 0.2, fill = &quot;gray15&quot;) + geom_text(stat = &quot;stratum&quot;, infer.label = TRUE, color = &quot;white&quot;) + theme_void() + scale_fill_manual(values = c(&quot;gray&quot;, &quot;darkred&quot;, &quot;orange&quot;)) + scale_x_discrete(limits = c(&quot;Sosyal Medya&quot;,&quot;Aday&quot;), expand = c(0,0)) + theme(plot.title = element_text(hjust = 0.5), axis.text.y = element_blank(), legend.position = &quot;bottom&quot;, legend.title = element_blank()) + labs(y = NULL, title = &quot;Sosyal Medya Kullanımına Göre İBB Aday Tercihi&quot;, caption = &quot;Kaynak: Konda&quot;) 3.2 Bar (Çubuk) Bölgeler düzeyinde tiyatro seyirci sayısı: #En basit şekilde ggplot(data = v2) + geom_bar(mapping = aes(x = `Bölge`, y = Tiyatro), stat = &quot;identity&quot;) #Alternatif ggplot(data = v2) + geom_col(mapping = aes(x = `Bölge`, y = Tiyatro)) x ekseninde yer alan bölge isimlerini küçültebiliriz. y eksenine ait değerleri daha okunabilir bir formata getirebiliriz. Çubukları büyükten küçüğe doğru sıralayabiliriz. Çubukları renklendirebiliriz. ggplot(data = v2) + geom_col(mapping = aes(x = reorder(`Bölge`, -Tiyatro), y = Tiyatro, fill = `Bölge`)) + theme(axis.text.x = element_text(size = 5)) + scale_y_continuous(labels = comma) Lejantı kaldırabiliriz. x ve y eksenlerine ait başlıkları kaldırabiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v2) + geom_col(mapping = aes(x = reorder(`Bölge`, -`Tiyatro`), y = Tiyatro, fill = `Bölge`)) + theme_minimal() + scale_y_continuous(labels = comma) + theme(axis.text.x = element_text(size = 6), axis.title.x = element_blank(), axis.title.y = element_blank(), legend.position = &quot;none&quot;) + labs(x = NULL, y = NULL, title = &quot;Bölgeler Düzeyinde Tiyatro Seyirci Sayısı&quot;, subtitle = &quot;2018 yılına ait verilerdir&quot;, caption = &quot;Kaynak: TÜİK&quot;) Çubukları yatay bir şekilde de gösterebiliriz. ggplot(data = v2) + geom_col(mapping = aes(x = reorder(`Bölge`, `Tiyatro`), y = Tiyatro, fill = `Bölge`)) + theme_minimal() + scale_y_continuous(labels = comma) + theme(axis.title.x = element_blank(), axis.title.y = element_blank(), legend.position = &quot;none&quot;) + labs(x = NULL, y = NULL, title = &quot;Bölgeler Düzeyinde Tiyatro Seyirci Sayısı&quot;, subtitle = &quot;2018 yılına ait verilerdir&quot;, caption = &quot;Kaynak: TÜİK&quot;) + coord_flip() 3.3 Box and Whisker (Kutu-Bıyık) Günlük BIST Hizmet, Mali, Sınai, Teknoloji endeks kapanışları: #En basit şekilde ggplot(data = v3) + geom_boxplot(mapping = aes(x = Endeks, y = `Kapanış`)) y eksenine ait değerleri daha okunabilir bir formata getirebiliriz. Kutuları renklendirebiliriz. ggplot(data = v3) + geom_boxplot(mapping = aes(x = Endeks, y = `Kapanış`, fill = Endeks)) + scale_y_continuous(labels = comma) + scale_fill_brewer(palette = &quot;Set1&quot;) Lejantı kaldırabiliriz. x eksenine ait başlığı kaldırabiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v3) + geom_boxplot(mapping = aes(x = Endeks, y = `Kapanış`, fill = Endeks)) + theme_minimal() + scale_y_continuous(labels = comma) + scale_fill_brewer(palette = &quot;Set1&quot;) + theme(legend.position = &quot;none&quot;) + labs(x = NULL, title = &quot;Günlük BIST Hizmet, Mali, Sınai, Teknoloji Endeks Kapanışları&quot;, subtitle = &quot;Son 1 yıla ait verilerdir&quot;, caption = &quot;Kaynak: TCMB&quot;) 3.4 Bubble (Balon) İl ve ilçelere göre İnsani Gelişme Endeksi: #En basit şekilde ggplot(data = v4) + geom_point(mapping = aes(x = `Nüfus`, y = Endeks, size = `Nüfus`)) İllere göre renklendirebiliriz. Noktaları düzenleyebiliriz. ggplot(data = v4) + geom_point(mapping = aes(x = `Nüfus`, y = Endeks, size = `Nüfus`, fill = `İl`), alpha = 0.5, shape = 21) + scale_color_viridis_d(option = &quot;A&quot;) Lejantı düzenleyebiliriz. x ve y eksenlerine ait başlıkları düzeltebiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v4) + geom_point(mapping = aes(x = `Nüfus`, y = Endeks, size = `Nüfus`, fill = `İl`), alpha = 0.5, shape = 21) + theme_fivethirtyeight() + scale_fill_viridis_d() + theme(legend.title = element_blank(), legend.position = &quot;right&quot;, legend.direction = &quot;vertical&quot;, axis.title = element_text()) + labs(x = &quot;Nüfus&quot;, y = &quot;İnsani Gelişme Endeksi&quot;, title = &quot;İl ve İlçelere Göre İnsani Gelişme Endeksi&quot;, caption = &quot;Kaynak: İnsani Gelişme Vakfı, TÜİK&quot;) 3.5 Bubble Map (Balon Harita) 2017 yılında kaydedilen terörist saldırılar ve ölü sayısı (GTD): palet &lt;- colorFactor(palette = c(&quot;blue&quot;,&quot;yellow&quot;,&quot;white&quot;,&quot;red&quot;,&quot;green&quot;,&quot;purple&quot;), domain = v5$Grup) #Renk ayarları v5 %&gt;% leaflet() %&gt;% addTiles() %&gt;% addProviderTiles(provider = providers$CartoDB.DarkMatterNoLabels) %&gt;% #Harita tipi addCircles(lng = ~Boylam, lat = ~Enlem, radius = ~`Ölü Sayısı`*5000, stroke = FALSE, color = ~palet(Grup)) %&gt;% addLegend(position = &quot;bottomright&quot;, pal = palet, values = v5$Grup, title = &quot;&quot;, opacity = 1) #Lejant 3.6 Candlestick (Mum) BIST’e ait açılış, en yüksek, en düşük, kapanış değerleri: v6 %&lt;&gt;% mutate(Date = ymd(Date)) #Veriler aşağıdaki gibi de alınabilir: #tq_get(x = &quot;GARAN.IS&quot;, from = &quot;2020-05-04&quot;, to = &quot;2020-05-20&quot;) #En basit şekilde ggplot(data = v6, mapping = aes(x = Date, y = Close)) + geom_candlestick(mapping = aes(open = Open, high = High, low = Low, close = Close)) Düşüş ve yükseliş renklerini değiştirebiliriz. ggplot(data = v6, mapping = aes(x = Date, y = Close)) + geom_candlestick(mapping = aes(open = Open, high = High, low = Low, close = Close), colour_up = &quot;darkgreen&quot;, fill_up = &quot;darkgreen&quot;, colour_down = &quot;darkred&quot;, fill_down = &quot;darkred&quot;) x ve y eksenlerine ait başlıkları kaldırabiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v6, mapping = aes(x = Date, y = Close)) + geom_candlestick(mapping = aes(open = Open, high = High, low = Low, close = Close), colour_up = &quot;darkgreen&quot;, fill_up = &quot;darkgreen&quot;, colour_down = &quot;darkred&quot;, fill_down = &quot;darkred&quot;) + theme_tq() + labs(x = NULL, y = NULL, title = &quot;Garanti Bankası Açılış, En Yüksek, En Düşük, Kapanış Değerleri&quot;, subtitle = &quot;04.05.2020-20.05.2020&quot;, caption = &quot;Kaynak: Yahoo&quot;) 3.7 Chord (Akor) İstanbul, İzmir ve Ankara’nın en çok göç aldığı 5 il: #En basit şekilde chordDiagram(x = v7) #GA: Göç Alan, GV: Göç veren Renkleri değiştirebiliriz. renkler &lt;- c(`GA-34` = &quot;red&quot;, `GA-6` = &quot;orange&quot;, `GA-35` = &quot;blue&quot;) chordDiagram(x = v7, col = renkler) 3.8 Choropleth Map İllere göre Covid-19 vaka sayısı (iller bazında ilk açıklandığı zamana ait veriler): TR &lt;- getData(&quot;GADM&quot;, country = &quot;TR&quot;, level = 1) #Türkiye iller düzeyi v8$`100KNüfus` &lt;- round(v8$`100KNüfus`, digits = 0) palet &lt;- colorQuantile(palette = &quot;RdYlBu&quot;, domain = v8$`100KNüfus`, n = 5, reverse = TRUE) #Renk ayarları leaflet() %&gt;% addProviderTiles(providers$OpenStreetMap.Mapnik) %&gt;% #Harita tipi addPolygons(data = TR, stroke = FALSE, smoothFactor = 0.2, fillOpacity = 0.3, fillColor = ~palet(v8$`100KNüfus`), popup = paste(&quot;&lt;b&gt;İl: &lt;/b&gt;&quot;, TR$NAME_1, &quot;&lt;br&gt;&quot;, &quot;&lt;b&gt;Vaka Sayısı: &lt;/b&gt;&quot;, v8$Vaka, &quot;&lt;br&gt;&quot;, &quot;&lt;b&gt;100 Bin Nüfus Başına: &lt;/b&gt;&quot;, v8$`100KNüfus`)) %&gt;% #Bilgilendirme addLegend(position = &quot;bottomright&quot;, pal = palet, values = v8$`100KNüfus`, title = &quot;&quot;, opacity = 1) #Lejant 3.9 Circular Ölümlü yaralanmalı trafik kazası sayısı: v28$Ay &lt;- factor(x = v28$Ay, levels = c(&quot;Ocak&quot;,&quot;Şubat&quot;,&quot;Mart&quot;,&quot;Nisan&quot;,&quot;Mayıs&quot;,&quot;Haziran&quot;, &quot;Temmuz&quot;,&quot;Ağustos&quot;,&quot;Eylül&quot;,&quot;Ekim&quot;,&quot;Kasım&quot;,&quot;Aralık&quot;)) #Olması gereken sıralama #En basit şekilde ggplot(data = v28)+ geom_bar(aes(x = Ay, y = `Kaza Sayısı`), stat = &quot;identity&quot;) + coord_polar() Renklendirebiliriz. Genişliği ayarlayabiliriz. y eksenine ait değerleri kaldırabiliriz. ggplot(data = v28)+ geom_bar(aes(x = Ay, y = `Kaza Sayısı`, fill = Ay), stat = &quot;identity&quot;, width = 0.9) + coord_polar() + scale_fill_viridis_d() + theme(axis.text.y = element_blank()) Lejantı kaldırabiliriz. x ve y eksenlerine ait başlıkları kaldırabiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v28)+ geom_bar(aes(x = Ay, y = `Kaza Sayısı`, fill = Ay), stat = &quot;identity&quot;, width = 0.9) + theme_minimal() + scale_fill_viridis_d() + coord_polar() + theme(legend.position = &quot;none&quot;, axis.title = element_blank(), axis.text.y = element_blank()) + labs(x = NULL, y = NULL, title = &quot;Ölümlü Yaralanmalı Trafik Kazası Sayısı&quot;, subtitle = &quot;2018 yılına ait verilerdir&quot;, caption = &quot;Kaynak: TÜİK&quot;) 3.10 Connected Scatter (Bağlantılı Saçılım) TÜFE aylık değişim (%): v10 %&lt;&gt;% mutate(Tarih = as.Date(paste0(Tarih,&quot;-&quot;,1))) #En basit şekilde ggplot(data = v10, mapping = aes(x = Tarih, y = `Gerçek`)) + geom_point() + geom_line() Mevsimlere göre renklendirebiliriz. y ekseninde her bir yılı gösterebiliriz. Çizgiyi daha soluk yapabiliriz. ggplot(data = v10, mapping = aes(x = Tarih, y = `Gerçek`)) + geom_point(aes(color = Mevsim)) + geom_line(color = &quot;gray&quot;) + scale_x_date(date_breaks = &quot;year&quot;, date_labels = &quot;%Y&quot;) x eksenine ait başlığı kaldırabilir, y eksenine ait başlığı düzeltebiliriz. Lejantı düzenleyebiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v10, mapping = aes(x = Tarih, y = `Gerçek`)) + geom_point(aes(color = Mevsim)) + geom_line(color = &quot;gray&quot;) + theme_minimal() + theme(legend.title = element_blank()) + scale_x_date(date_breaks = &quot;year&quot;, date_labels = &quot;%Y&quot;) + labs(x = NULL, y = &quot;Değişim, %&quot;, title = &quot;Aylık TÜFE Değişimi&quot;, subtitle = &quot;2013/Ocak-2020/Nisan verilerine aittir&quot;, caption = &quot;Kaynak: TÜİK&quot;) 3.11 Connection Map (Bağlantı Harita) KTÜ’ye yerleşenlerin geldiği yerler (yokatlas): v11 %&gt;% leaflet() %&gt;% addTiles() %&gt;% addPolylines(lng = ~long, lat = ~lat, weight = 3, opacity = 0.5) #Bağlantılar 3.12 Density (Yoğunluk) İstanbul Anadolu Yakası 1+1 kiralık daire fiyatları: #En basit şekilde ggplot(data = v12, mapping = aes(x = Fiyat)) + geom_density() Renklendirme yapabiliriz. y eksenine ait değerleri daha okunabilir bir formata getirebiliriz. ggplot(data = v12, mapping = aes(x = Fiyat)) + geom_density(fill = &quot;red&quot;, color = &quot;red&quot;, alpha = 0.5) + scale_y_continuous(labels = comma) x eksenine ait başlığı kaldırabilir; y eksenine ait başlığı düzenleyebiliriz. Başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v12, mapping = aes(x = Fiyat)) + geom_density(fill = &quot;red&quot;, color = &quot;red&quot;, alpha = 0.5) + theme_minimal() + scale_y_continuous(labels = comma) + labs(x = NULL, y = &quot;Yoğunluk&quot;, title = &quot;İstanbul Anadolu Yakası&#39;ndaki 1+1 Kiralık Daire Fiyatları&quot;, caption = &quot;Kaynak: Sahibinden&quot;) 3.13 Donut 23 Haziran 2019 İstanbul sonuçları: #En basit şekilde v13$Oran &lt;- v13$Oy / sum(v13$Oy) #Oy oranları v13$ymax &lt;- cumsum(v13$Oran) #Kümülatif oranlar v13$ymin = c(0, head(v13$ymax, n = -1)) #Alan ggplot(v13, aes(ymax = ymax, ymin = ymin, xmax = 4, xmin = 3, fill = Aday)) + geom_rect() + coord_polar(theta = &quot;y&quot;) + xlim(c(2, 4)) İsimlerin pozisyonlarını ayarlayabiliriz. Etiketlerin gösterim şeklini ayarlayabiliriz. Renklendirme yapabiliriz. v13$EtiketPoz &lt;- (v13$ymax + v13$ymin) / 2 v13$Etiket &lt;- paste0(v13$Aday, &quot;\\n%&quot;, round(v13$Oran * 100, digits = 2)) ggplot(v13, aes(ymax = ymax, ymin = ymin, xmax = 4, xmin = 3, fill = Aday)) + geom_rect() + geom_text(x = 3.5, aes(y = EtiketPoz, label = Etiket), size = 3) + coord_polar(theta = &quot;y&quot;) + xlim(c(2, 4)) + scale_fill_manual(values = c(&quot;orange&quot;, &quot;gray&quot;, &quot;red&quot;)) Lejantı kaldırabiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(v13, aes(ymax = ymax, ymin = ymin, xmax = 4, xmin = 3, fill = Aday)) + geom_rect() + geom_text(x = 3.5, aes(y = EtiketPoz, label = Etiket), size = 3) + theme_void() + coord_polar(theta = &quot;y&quot;) + xlim(c(2, 4)) + scale_fill_manual(values = c(&quot;orange&quot;, &quot;gray&quot;, &quot;red&quot;)) + theme(legend.position = &quot;none&quot;) + labs(title = &quot;İstanbul Seçim Sonuçları&quot;, subtitle = &quot;23 Haziran 2019&quot;, caption = &quot;Kaynak: NTV&quot;) 3.14 Dot Map (Nokta Haritası) Tiplerine göre Türkiye’deki havaalanları (wikipedia): palet &lt;- colorFactor(palette = c(&quot;red&quot;,&quot;gray&quot;,&quot;orange&quot;,&quot;blue&quot;), domain = v14$Tip) v14 %&gt;% leaflet() %&gt;% addTiles() %&gt;% addProviderTiles(provider = providers$CartoDB.DarkMatterNoLabels) %&gt;% #Harita tipi addCircles(lng = ~Koord2, lat = ~Koord1, weight = 3, color = ~palet(Tip)) %&gt;% #Nokta addLegend(position = &quot;bottomright&quot;, pal = palet, values = v14$Tip, title = &quot;&quot;, opacity = 1) #Lejant 3.15 Dumbbell Bölgelere ve cinsiyetlere göre ortalama ilk evlenme yaşları: #En basit şekilde ggplot(data = v15)+ geom_dumbbell(mapping = aes(x = `Kadın`, xend = Erkek, y = `Bölge`)) x ve xend büyüklüklerini ve renklerini belirleyebiliriz. İki nokta arasındaki çizginin görünürlüğünü azaltabiliriz. ggplot(data = v15)+ geom_dumbbell(mapping = aes(x = `Kadın`, xend = Erkek, y = `Bölge`), size_x = 2, size_xend = 2, colour_x = &quot;blue&quot;, colour_xend = &quot;red&quot;, colour = &quot;grey&quot;) x eksenine ait limit ve aralıkları belirleyebiliriz. x ve y eksenlerine ait başlıkları kaldırabiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v15)+ geom_dumbbell(mapping = aes(x = `Kadın`, xend = Erkek, y = `Bölge`), size_x = 2, size_xend = 2, colour_x = &quot;blue&quot;, colour_xend = &quot;red&quot;, colour = &quot;grey&quot;) + theme_minimal() + scale_x_continuous(limits = c(23,30), breaks = seq(23,30,1)) + labs(x = NULL, y = NULL, title = &quot;Bölgelere ve Cinsiyetlere Göre Ortalama İlk Evlenme Yaşları&quot;, subtitle = &quot;2019 yılına ait verilerdir&quot;, caption = &quot;Kaynak: TÜİK&quot;) Noktaların hangi cinsiyete ait olduğunu da belirtebiliriz. Bunu yaparken her bir bölgeye ait çizgide de gösterebiliriz; aşağıda olduğu gibi bir tane bölgeyi filtreleyip tek bir çizgide de gösterebiliriz. ggplot(data = v15)+ geom_dumbbell(mapping = aes(x = `Kadın`, xend = Erkek, y = `Bölge`), size_x = 2, size_xend = 2, colour_x = &quot;blue&quot;, colour_xend = &quot;red&quot;, colour = &quot;grey&quot;) + geom_text(data = v15 %&gt;% filter(`Bölge` == &quot;Ortadoğu Anadolu&quot;), aes(x = `Kadın`, y = `Bölge`, label = &quot;Kadın&quot;), size = 3, hjust = 1.2) + geom_text(data = v15 %&gt;% filter(`Bölge` == &quot;Ortadoğu Anadolu&quot;), aes(x = `Erkek`, y = `Bölge`, label = &quot;Erkek&quot;), size = 3, hjust = -0.2) + theme_minimal() + scale_x_continuous(limits = c(23,30), breaks = seq(23,30,1)) + labs(x = NULL, y = NULL, title = &quot;Bölgelere ve Cinsiyetlere Göre Ortalama İlk Evlenme Yaşları&quot;, subtitle = &quot;2019 yılına ait verilerdir&quot;, caption = &quot;Kaynak: TÜİK&quot;) 3.16 Heatmap (Isı Haritası) Tüketici güven endeksi: v16 %&lt;&gt;% mutate(&quot;Yıl&quot; = year(Tarih), &quot;Ay&quot; = month(Tarih, label = TRUE)) #En basit şekilde ggplot(data = v16) + geom_tile(mapping = aes(x = `Yıl`, y = Ay, fill = Endeks)) Renkleri değiştirebiliriz. ggplot(data = v16) + geom_tile(mapping = aes(x = `Yıl`, y = Ay, fill = Endeks)) + scale_fill_viridis_c() y eksenini ters çevirebiliriz. Grafikteki boşlukları kapatabiliriz. ggplot(data = v16) + geom_tile(mapping = aes(x = `Yıl`, y = Ay, fill = Endeks)) + scale_fill_viridis_c() + scale_y_discrete(limits = rev(levels(v16$Ay))) + scale_x_continuous(expand = c(0,0)) Lejantı düzenleyebiliriz. x ve y eksenlerine ait başlıkları kaldırabiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v16) + geom_tile(mapping = aes(x = `Yıl`, y = Ay, fill = Endeks)) + scale_fill_viridis_c() + theme(legend.position = &quot;bottom&quot;, legend.key.width = unit(3, &quot;cm&quot;), legend.title = element_blank(), panel.background = element_rect(fill = &quot;white&quot;, colour = &quot;gray&quot;)) + scale_y_discrete(limits = rev(levels(v16$Ay))) + scale_x_continuous(expand = c(0,0)) + labs(x = NULL, y = NULL, title = &quot;Tüketici Güven Endeksi&quot;, subtitle = &quot;Ocak/2004-Nisan/2020 tarihlerine ait verilerdir&quot;, caption = &quot;Kaynak: TÜİK&quot;) 3.17 Histogram Günlük BIST Endeksi toplam işlem hacmi: #En basit şekilde ggplot(data = v17) + geom_histogram(mapping = aes(x = `ToplamİşlemHacmi`)) Aralık seçimini ayarlayabiliriz. x eksenine ait değerleri daha okunabilir bir formata getirebiliriz. Renklendirme yapabiliriz. ggplot(data = v17) + geom_histogram(mapping = aes(x = `ToplamİşlemHacmi`), binwidth = 500000, fill = &quot;dark red&quot;) + scale_x_continuous(labels = comma) x eksenine ait başlığı kaldırabilir, y eksenine ait başlığı düzeltebiliriz. Ortalama çizgisi (kesikli) ekleyebiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v17) + geom_histogram(mapping = aes(x = `ToplamİşlemHacmi`), binwidth = 500000, fill = &quot;dark red&quot;) + geom_vline(xintercept = mean(v17$`ToplamİşlemHacmi`), linetype = &quot;dashed&quot;) + theme_minimal() + scale_x_continuous(labels = comma) + labs(x = NULL, y = &quot;Sayma&quot;, title = &quot;Günlük BIST Endeksi Toplam İşlem Hacmi&quot;, subtitle = &quot;Son 10 yıla ait verilerdir&quot;, caption = &quot;Kaynak: TCMB&quot;) 3.18 Line (Çizgi) Günlük Dolar ve Euro alış kuru: v18 %&lt;&gt;% mutate(Tarih = as.Date(Tarih)) #En basit şekilde ggplot(data = v18) + geom_line(mapping = aes(x = Tarih, y = `Alış`, group = Kur)) Renkleri değiştirebiliriz. Kur tiplerini ayırabiliriz. x eksenindeki tarihleri belli bir aralıkta gösterebiliriz. y eksenindeki değerleri belli bir limit ve aralıkta gösterebiliriz. ggplot(data = v18) + geom_line(mapping = aes(x= Tarih, y = `Alış`, group = Kur, color = Kur)) + scale_x_date(date_labels = &quot;%Y&quot;, date_breaks = &quot;year&quot;) + scale_y_continuous(limits = c(0,8), breaks = seq(0,8,1)) + scale_color_manual(values = c(&quot;black&quot;,&quot;red&quot;)) Her bir çizginin sonunda hangi kura ait olduğunu belirtebiliriz. ggplot(data = v18, mapping = aes(x= Tarih, y = `Alış`, group = Kur, color = Kur)) + geom_line() + geom_dl(aes(label = Kur), method = list(dl.combine(&quot;last.points&quot;), cex = 0.8)) + scale_x_date(date_labels = &quot;%Y&quot;, date_breaks = &quot;year&quot;) + scale_y_continuous(limits = c(0,8), breaks = seq(0,8,1)) + scale_color_manual(values = c(&quot;black&quot;,&quot;red&quot;)) Lejantı kaldırabiliriz. x eksenine ait başlığı kaldırabilir; y eksenine ait başlığı düzeltebiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v18, mapping = aes(x = Tarih, y = `Alış`, group = Kur, color = Kur)) + geom_line() + geom_dl(aes(label = Kur), method = list(dl.combine(&quot;last.points&quot;), cex = 0.7)) + theme_minimal() + scale_x_date(date_labels = &quot;%Y&quot;, date_breaks = &quot;year&quot;) + scale_y_continuous(limits = c(0,8), breaks = seq(0,8,1)) + scale_color_manual(values = c(&quot;black&quot;,&quot;red&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = NULL, y = &quot;Alış&quot;, title = &quot;Günlük Dolar ve Euro Alış Kuru&quot;, subtitle = &quot;Son 10 yıla ait verilerdir&quot;, caption = &quot;Kaynak: TCMB&quot;) 3.19 Lollipop Trafiğe kaydı yapılan otomobillerin renkleri: v9 %&lt;&gt;% filter(Renk != &quot;Diğer&quot;) #En basit şekilde ggplot(data = v9, mapping = aes(x = Renk, y = `OtomobilSayısı`)) + geom_segment(mapping = aes(xend = Renk, y = 0, yend = `OtomobilSayısı`)) + geom_point() Çizgileri kesikli yapabiliriz. Noktaların renklerini ve büyüklüklerini değiştirebiliriz. Büyükten küçüğe sıralayabiliriz. x eksenine ait değerleri daha okunabilir bir formata getirebiliriz. ggplot(data = v9, mapping = aes(x = reorder(Renk, -`OtomobilSayısı`), y = `OtomobilSayısı`)) + geom_segment(mapping = aes(xend = Renk, y = 0, yend = `OtomobilSayısı`), linetype = &quot;dashed&quot;) + geom_point(size = 3, mapping = aes(color = Renk)) + scale_y_continuous(labels = comma) + scale_color_manual(values = c(&quot;white&quot;,&quot;gray&quot;,&quot;brown&quot;,&quot;red&quot;,&quot;blue&quot;,&quot;yellow&quot;,&quot;black&quot;,&quot;orange&quot;,&quot;green&quot;)) x eksenine ait başlığı kaldırabilir; y eksenine ait başlığı düzeltebiliriz. Lejantı kaldırabiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v9, mapping = aes(x = reorder(Renk, -`OtomobilSayısı`), y = `OtomobilSayısı`)) + geom_segment(mapping = aes(xend = Renk, y = 0, yend = `OtomobilSayısı`), linetype = &quot;dashed&quot;) + geom_point(size = 5, mapping = aes(color = Renk)) + theme_dark() + theme(legend.position = &quot;none&quot;) + scale_y_continuous(labels = comma) + scale_color_manual(values = c(&quot;white&quot;,&quot;gray&quot;,&quot;brown&quot;,&quot;red&quot;,&quot;blue&quot;,&quot;yellow&quot;,&quot;black&quot;,&quot;orange&quot;,&quot;green&quot;)) + labs(x = NULL, y = &quot;Otomobil Sayısı&quot;, title = &quot;Trafiğe Kaydı Yapılan Otomobillerin Renkleri&quot;, subtitle = &quot;2020 yılına ait verilerdir&quot;, caption = &quot;Kaynak: TÜİK&quot;) 3.20 Multi-set Bar (Çoklu Çubuk) Bölgeler düzeyinde tiyatro-sinema seyirci sayısı: #En basit şekilde ggplot(data = v19) + geom_col(mapping = aes(x = `Bölge`, y = `Sayı`, fill = `Tip`), position = &quot;dodge&quot;) x ekseninde yer alan bölge isimlerini küçültebiliriz. y eksenine ait değerleri daha okunabilir bir formata getirebiliriz. Çubukları büyükten küçüğe doğru sıralayabiliriz. Çubukları renklendirebiliriz. ggplot(data = v19) + geom_col(mapping = aes(x = reorder(`Bölge`, -`Sayı`), y = `Sayı`, fill = `Tip`), position = &quot;dodge&quot;) + theme(axis.text.x = element_text(size = 5)) + scale_y_continuous(labels = comma) + scale_fill_manual(values = c(&quot;red&quot;,&quot;blue&quot;)) Lejantı kaldırabiliriz. x ve y eksenlerine ait başlıkları kaldırabiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v19) + geom_col(mapping = aes(x = reorder(`Bölge`, -`Sayı`), y = `Sayı`, fill = `Tip`), position = &quot;dodge&quot;) + theme_minimal() + scale_y_continuous(labels = comma) + theme(axis.text.x = element_text(size = 6), axis.title.x = element_blank(), axis.title.y = element_blank(), legend.position = &quot;bottom&quot;, legend.title = element_blank()) + labs(title = &quot;Bölgeler Düzeyinde Tiyatro ve Sinema Seyirci Sayısı&quot;, subtitle = &quot;2018 yılına ait verilerdir&quot;, caption = &quot;Kaynak: TÜİK&quot;) + scale_fill_manual(values = c(&quot;red&quot;,&quot;blue&quot;)) 3.21 Network (Ağ) Seçtiğim dört arkadaş + benim ortak takip ettiğimiz hesaplar: plot(graph_from_data_frame(v20)) #Kişisel çalışmanızı aşağıdaki gibi yapabilirsiniz: # library(rtweet) # arkadaslar &lt;- get_friends(c(&quot;EdaDenizOzdemir&quot;,&quot;canozkaaan&quot;,&quot;sam_econ&quot;,&quot;fratmelhylmaz&quot;,&quot;rpydaneogrendim&quot;)) # tablo &lt;- table(arkadaslar$user_id) # arkadaslar &lt;- subset(arkadaslar, user_id %in% names(tablo[tablo &gt;= 4L])) # isimler &lt;- lookup_users(arkadaslar$user_id) # isimler &lt;- isimler[,c(1,4)] # arkadaslar &lt;- merge(arkadaslar, isimler[,-2], by = &quot;user_id&quot;) 3.22 OHLC (Açılış-Yükseliş-Düşüş-Kapanış) BIST’e ait açılış, en yüksek, en düşük, kapanış değerleri: v6 %&lt;&gt;% mutate(Date = ymd(Date)) #Veriler aşağıdaki gibi de alınabilir: #tq_get(x = &quot;GARAN.IS&quot;, from = &quot;2020-05-04&quot;, to = &quot;2020-05-20&quot;) #En basit şekilde ggplot(data = v6, mapping = aes(x = Date, y = Close)) + geom_barchart(mapping = aes(open = Open, high = High, low = Low, close = Close)) Düşüş ve yükseliş renklerini değiştirebiliriz. Kalınlığını ayarlayabiliriz. ggplot(data = v6, mapping = aes(x = Date, y = Close)) + geom_barchart(mapping = aes(open = Open, high = High, low = Low, close = Close), colour_up = &quot;darkgreen&quot;, colour_down = &quot;darkred&quot;, size = 1) x ve y eksenlerine ait başlıkları kaldırabiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v6, mapping = aes(x = Date, y = Close)) + geom_barchart(mapping = aes(open = Open, high = High, low = Low, close = Close), colour_up = &quot;darkgreen&quot;, colour_down = &quot;darkred&quot;, size = 1) + theme_tq() + labs(x = NULL, y = NULL, title = &quot;Garanti Bankası Açılış, En Yüksek, En Düşük, Kapanış Değerleri&quot;, subtitle = &quot;04.05.2020-20.05.2020&quot;, caption = &quot;Kaynak: Yahoo&quot;) 3.23 Population Pyramid (Nüfus Piramidi) Türkiye nüfus piramidi: #En basit şekilde ggplot(data = v21, mapping = aes(x = reorder(`Yaş Grubu`, `Sıralama`), fill = Cinsiyet, y = ifelse(test = Cinsiyet == &quot;Erkek&quot;, yes = -`Nüfus`, no = `Nüfus`))) + geom_bar(stat = &quot;identity&quot;) + coord_flip() x eksenindeki değerleri kaldırabiliriz. Renkleri değiştirebiliriz. ggplot(data = v21, mapping = aes(x = reorder(`Yaş Grubu`, `Sıralama`), fill = Cinsiyet, y = ifelse(test = Cinsiyet == &quot;Erkek&quot;, yes = -`Nüfus`, no = `Nüfus`))) + geom_bar(stat = &quot;identity&quot;) + scale_y_continuous(labels = abs, limits = max(v21$`Nüfus`) * c(-1,1)) + theme(axis.text.x = element_blank()) + scale_fill_brewer(palette = &quot;Dark2&quot;) + coord_flip() Lejantı düzenleyebiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v21, mapping = aes(x = reorder(`Yaş Grubu`, `Sıralama`), fill = Cinsiyet, y = ifelse(test = Cinsiyet == &quot;Erkek&quot;, yes = -`Nüfus`, no = `Nüfus`))) + geom_bar(stat = &quot;identity&quot;) + theme_minimal() + scale_y_continuous(labels = abs, limits = max(v21$`Nüfus`) * c(-1,1)) + labs(x = NULL, y = NULL, title = &quot;Türkiye Nüfus Piramidi&quot;, subtitle = &quot;2019 yılı nüfus verileri&quot;, caption = &quot;Kaynak: TÜİK&quot;) + theme(axis.text.x = element_blank(), legend.title = element_blank()) + scale_fill_brewer(palette = &quot;Dark2&quot;) + coord_flip() 3.24 Radar Dört büyüklerin aldığı kupa sayıları: v22 %&lt;&gt;% column_to_rownames(var = &quot;Kupa&quot;) #En basit şekilde radarchart(v22) İki tane satır eklememiz gerekiyor. Bu satırlar değişken sayısı kadar olacak ve her biri için minimum ve maksimum (kupa) sayıları belirtecek. v22 &lt;- rbind(rep(25,3), rep(0,3), v22) radarchart(v22) Çizgi ve alanları renklendirebiliriz. cizgi &lt;- c(alpha(&quot;blue&quot;, 1), alpha(&quot;black&quot;, 1), alpha(&quot;yellow&quot;, 1)) alan &lt;- c(alpha(&quot;blue&quot;, 0.5), alpha(&quot;black&quot;, 0.5), alpha(&quot;yellow&quot;, 0.5)) radarchart(v22, pcol = cizgi, pfcol = alan) Etiketleri düzeltebiliriz. Çizgileri düzeltebiliriz. cizgi_kalinligi &lt;- 3 cizgi_tipi &lt;- 1 cizgi_renk &lt;- &quot;gray&quot; etiket_buyuklugu &lt;- 0.7 radarchart(v22, pcol = cizgi, pfcol = alan, plwd = cizgi_kalinligi, plty = cizgi_tipi, cglcol = cizgi_renk, vlcex = etiket_buyuklugu) Lejant ekleyebiliriz. Başlık ekleyebiliriz. radarchart(v22, pcol = cizgi, pfcol = alan, plwd = cizgi_kalinligi, plty = cizgi_tipi, cglcol = cizgi_renk, vlcex = etiket_buyuklugu, title = &quot;Dört Büyüklerin Aldıkları Kupa Sayıları | TFF&quot;) legend(x = 0.5, y = 1.2, legend = rownames(v22[-c(1,2),]), pch = 15, col = alan, cex = 1.2, pt.cex = 3, bty = &quot;n&quot;) 3.25 Ridgeline Günlük BIST Hizmet, Mali, Sınai, Teknoloji endeks kapanışları: #En basit şekilde ggplot(data = v3) + geom_density_ridges(mapping = aes(x = `Kapanış`, y = Endeks)) x eksenine ait değerleri daha okunabilir bir formata getirebiliriz. Renkleri değiştirebiliriz. ggplot(data = v3) + geom_density_ridges(mapping = aes(x = `Kapanış`, y = Endeks, fill = Endeks)) + scale_x_continuous(labels = comma) + scale_fill_brewer(palette = &quot;Dark2&quot;) Lejantı kaldırabiliriz. y eksenine ait başlığı kaldırabilir; x eksenine ait başlığı düzeltebiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v3) + geom_density_ridges(mapping = aes(x = `Kapanış`, y = Endeks, fill = Endeks)) + theme_minimal() + scale_x_continuous(labels = comma) + scale_fill_brewer(palette = &quot;Dark2&quot;) + theme(legend.position = &quot;none&quot;) + labs(x = &quot;Endeks Kapanışları&quot;, y = NULL, title = &quot;Günlük BIST Hizmet, Mali, Sınai, Teknoloji Endeks Kapanışları&quot;, subtitle = &quot;Son 1 yıla ait verilerdir&quot;, caption = &quot;Kaynak: TCMB&quot;) 3.26 Scatter (Dağılım, Nokta, Saçılım) Aylık TÜFE değişim beklentisi ile gerçekleşen: #En basit şekilde ggplot(data = v10) + geom_point(mapping = aes(x = Beklenti, y = `Gerçek`)) Mevsimlere göre renklendirebiliriz. ggplot(data = v10) + geom_point(mapping = aes(x = Beklenti, y = `Gerçek`, color = Mevsim)) + scale_color_brewer(palette = &quot;Set1&quot;) Lejantı kaldırabiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v10) + geom_point(mapping = aes(x = Beklenti, y = `Gerçek`, color = Mevsim)) + scale_color_brewer(palette = &quot;Set1&quot;) + theme_minimal() + theme(legend.title = element_blank()) + labs(title = &quot;Aylık TÜFE Değişim Beklentisi-Gerçekleşen&quot;, subtitle = &quot;2013/Ocak-2020/Nisan verilerine aittir&quot;, caption = &quot;Kaynak: TCMB&quot;) 3.27 Stacked Area (Yığılı Alan) Covid-19 vaka, iyileşen ve ölüm sayıları: #En basit şekilde v23$Grup &lt;- factor(v23$Grup, levels = c(&quot;Vaka&quot;, &quot;İyileşen&quot;, &quot;Ölüm&quot;)) #Yapılacak sıralama önemlidir ggplot(data = v23) + geom_area(mapping = aes(x = `Gün`, y = `Sayı`, fill = Grup)) y eksenine ait değerleri daha okunabilir bir formata getirebiliriz. Renkleri değiştirebiliriz. ggplot(data = v23) + geom_area(mapping = aes(x = `Gün`, y = `Sayı`, fill = Grup)) + scale_y_continuous(labels = comma) + scale_fill_viridis_d() Lejantı düzenleyebiliriz. x ve y eksenlerine ait başlıkları kaldırabiliriz. Başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v23) + geom_area(mapping = aes(x = `Gün`, y = `Sayı`, fill = Grup)) + scale_y_continuous(labels = comma) + scale_fill_viridis_d() + theme_minimal() + theme(legend.position = &quot;bottom&quot;, legend.title = element_blank()) + labs(x = NULL, y = NULL, title = &quot;Türkiye Covid-19 Vaka, İyileşen, Ölüm Sayıları&quot;, caption = &quot;Kaynak: CSSEGISandData&quot;) 3.28 Stacked Bar (Yığılmış Çubuk) Partilerin cinsiyete göre milletvekili sayısı: #En basit şekilde ggplot(v24) + geom_bar(mapping = aes(x = Parti, y = `Sayı`, fill = Cinsiyet), position = &quot;stack&quot;, stat = &quot;identity&quot;) #Alternatif olarak yüzde ile gösterilebilir. v24 %&lt;&gt;% group_by(Parti) %&gt;% mutate(Oran = round(`Sayı` / sum(`Sayı`) * 100, digits = 1)) ggplot(v24) + geom_bar(mapping = aes(x = Parti, y = Oran, fill = Cinsiyet), position = &quot;stack&quot;, stat = &quot;identity&quot;) Çubukların içine oranları yazabiliriz. Renkleri değiştirebiliriz. y eksenindeki değerleri kaldırabiliriz. ggplot(v24, mapping = aes(x = Parti, y = Oran, fill = Cinsiyet)) + geom_bar(stat = &quot;identity&quot;) + geom_text(mapping = aes(label = paste0(&quot;%&quot;,Oran)), position = position_stack(vjust = 0.5)) + scale_fill_viridis_d() + theme(axis.text.y = element_blank()) x ve y eksenlerine ait başlıkları kaldırabiliriz. Lejantı düzenleyebiliriz. Başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(v24, mapping = aes(x = Parti, y = Oran, fill = Cinsiyet)) + geom_bar(stat = &quot;identity&quot;) + geom_text(mapping = aes(label = paste0(&quot;%&quot;,Oran)), position = position_stack(vjust = 0.5)) + scale_fill_viridis_d() + theme_minimal() + theme(legend.title = element_blank(), axis.text.y = element_blank()) + labs(x = NULL, y = NULL, title = &quot;TBMM Milletvekilleri Cinsiyete Göre Dağılım&quot;, subtitle = &quot;5 parti dahil edilmiştir&quot;, caption = &quot;Kaynak: TBMM&quot;) 3.29 Timeline (Zaman Çizelgesi) TCMB başkanları (vikipedi): vistime(v25, events = &quot;İsim&quot;, groups = &quot;Sıra&quot;, title = &quot;TCMB Başkanları&quot;, start = &quot;Başlangıç&quot;, end = &quot;Bitiş&quot;) 3.30 Treemap (Ağaç Harita) İl ve türlerine göre motorlu kara taşıtı sayıları: #En basit şekilde treemap(dtf = v26, index = &quot;Araçtipi&quot;, vSize = &quot;Taşıtsayısı&quot;) Renkleri değiştirebiliriz. Başlığı düzeltebiliriz. Etiketlerin yerlerini merkezi yapabiliriz. treemap(dtf = v26, index = &quot;Araçtipi&quot;, vSize = &quot;Taşıtsayısı&quot;, palette = &quot;Dark2&quot;, title = &quot;Türlerine Göre Motorlu Kara Taşıtı Sayıları, 2020 | TÜİK&quot;, align.labels = c(&quot;center&quot;,&quot;center&quot;)) Aynısını illere ayırarak da yapabiliriz. treemap(dtf = v26, index = c(&quot;İl&quot;,&quot;Araçtipi&quot;), vSize = &quot;Taşıtsayısı&quot;, palette = &quot;Dark2&quot;, title = &quot;İl ve Türlerine Göre Motorlu Kara Taşıtı Sayıları, 2020 | TÜİK&quot;, align.labels = list(c(&quot;center&quot;,&quot;center&quot;), c(&quot;right&quot;,&quot;bottom&quot;))) 3.31 Violin (Viyolonsel) Günlük BIST Hizmet, Mali, Sınai, Teknoloji endeks kapanışları: #En basit şekilde ggplot(data = v3) + geom_violin(mapping = aes(x = Endeks, y = `Kapanış`)) y eksenine ait değerleri daha okunabilir bir formata getirebiliriz. Kutuları renklendirebiliriz. ggplot(data = v3) + geom_violin(mapping = aes(x = Endeks, y = `Kapanış`)) + scale_y_continuous(labels = comma) Lejantı kaldırabiliriz. x eksenine ait başlığı kaldırabiliriz. Başlık, alt başlık ve kaynak ekleyebiliriz. Temayı değiştirebiliriz. ggplot(data = v3) + geom_violin(mapping = aes(x = Endeks, y = `Kapanış`, fill = Endeks)) + scale_y_continuous(labels = comma) + theme_minimal() + theme(legend.position = &quot;none&quot;) + labs(x = NULL, title = &quot;Günlük BIST Hizmet, Mali, Sınai, Teknoloji Endeks Kapanışları&quot;, subtitle = &quot;Son 1 yıla ait verilerdir&quot;, caption = &quot;Kaynak: TCMB&quot;) + scale_fill_brewer(palette = &quot;Set1&quot;) 3.32 Wordcloud (Kelime Bulutu) Türkçe atılan ‘virüs’ tweetleri: #En basit şekilde v27 %&lt;&gt;% rename(&quot;word&quot; = 1, &quot;freq&quot; = 2) wordcloud2(data = v27, size = 1.5) "]
]
